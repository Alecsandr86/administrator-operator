/**
 * modified version of eric meyer's reset 2.0
 * http://meyerweb.com/eric/tools/css/reset/
 */
/**
 * basic reset
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, main,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/**
 * HTML5 display-role reset for older browsers
 */
article, aside, details, figcaption, figure,
footer, header, menu, nav, section,
main, summary {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * modified version of normalize.css 3.0.2
 * http://necolas.github.io/normalize.css/
 */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

/**
 * HTML5 display definitions
 * =============================================================================
 */
/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/**
 * Links
 * =============================================================================
 */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * Text-level semantics
 * =============================================================================
 */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * 1. Address styling not present in Safari and Chrome.
 * 2. Set previously resetted italic font-style
 */
dfn,
i, em {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/**
 * Embedded content
 * =============================================================================
 */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/**
 * Grouping content
 * =============================================================================
 */
/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

/**
 * Forms
 * =============================================================================
 */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0; }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.icon-entrance {
  background-image: url(../images/sprite.png);
  background-position: 0px 0px;
  width: 17px;
  height: 16px; }

.icon-print {
  background-image: url(../images/sprite.png);
  background-position: 0px -21px;
  width: 16px;
  height: 16px; }

.icon-user_min {
  background-image: url(../images/sprite.png);
  background-position: 0px -42px;
  width: 16px;
  height: 16px; }

body {
  font-family: Helvetica, Arial, "Helvetica Neue",  sans-serif;
  font-size: 12px;
  color: #454545; }

a {
  color: #1587c9; }

h1,
h2,
h3,
h4,
h5,
h6,
strong,
b {
  font-weight: bold; }

h1 {
  font-size: 30px; }

i {
  display: inline-block; }

.wrapper {
  width: 1920px;
  margin: 0 auto; }

/* == class blocked float == */
.g-cr {
  float: none;
  clear: both;
  margin: 0;
  padding: 0;
  font-size: 0.1px; }

/* == class blocked float == */
.g-both:after {
  clear: both;
  content: "";
  display: block;
  float: none;
  margin: 0;
  padding: 0; }

.g-left {
  float: left; }

.g-right {
  float: right; }

.pages-login {
  position: relative;
  width: 100%;
  min-height: 1000px;
  background-image: -webkit-linear-gradient(308deg, #12587e 0%, #c7eee3 100%);
  background-image: linear-gradient(142deg, #12587e 0%, #c7eee3 100%); }
  .pages-login__conteiner {
    position: absolute;
    width: 660px;
    min-height: 550px;
    left: 50%;
    top: 50%;
    margin: -275px 0 0 -330px; }
    .pages-login__conteiner_logo-poz {
      margin: -10px 0 10px -30px; }

.authorization {
  width: 660px;
  height: 444px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 0 rgba(81, 81, 81, 0.15); }
  .authorization__content {
    width: 366px;
    margin: 0 auto; }
  .authorization__form {
    padding: 82px 0 0; }
    .authorization__form_item {
      padding: 0 0 18px;
      display: block; }
    .authorization__form_title {
      color: #838383;
      font-size: 18px;
      display: inline-block;
      padding: 0 0 4px; }
    .authorization__form_input {
      display: block;
      width: 100%;
      height: 41px;
      background-color: #fff;
      border: 1px solid #d7d7d7;
      border-radius: 3px;
      padding: 0 14px;
      font-size: 20px;
      color: black; }
    .authorization__form_pass {
      border: none;
      height: 39px; }

.js-pass {
  background: url("../images/show-pass.png") no-repeat 0 0;
  width: 24px;
  height: 16px;
  display: inline-block;
  cursor: pointer;
  opacity: 0.5;
  float: right;
  margin-top: 11px; }

.show_pass {
  opacity: 1; }

.authorization__form_link-help {
  float: right;
  display: inline-block; }

.g-btn {
  display: inline-block;
  border: none;
  width: 100%;
  height: 49px;
  background-color: #7ec756;
  border-radius: 3px;
  box-shadow: 0 2px 0 #629f40;
  text-shadow: 0 2px 0 rgba(98, 159, 64, 0.42);
  color: #fff;
  font-size: 24px; }
  .g-btn:hover {
    background-color: #84ca5e; }

.authorization__form-btn {
  margin: 30px 0 0; }

.header {
  background-color: #007cc4;
  padding: 12px 12px 0;
  min-width: 1920px; }
  .header__logo {
    float: left; }
  .header__menu {
    padding: 4px 3px 0;
    float: left; }
  .header__additional {
    float: right; }

.menu__item {
  font-size: 13px;
  color: #fff;
  text-decoration: none;
  padding: 11px 22px 10px;
  display: inline-block;
  -webkit-transition: all 0.3s ease;
          transition: all 0.3s ease; }
  .menu__item-active {
    color: #454545;
    background-color: #fff;
    border-radius: 5px 5px 0 0; }
  .menu__item:hover {
    color: #454545;
    background-color: #fff;
    border-radius: 5px 5px 0 0; }

.additional__report {
  color: #bbd3ea;
  font-size: 13px;
  text-decoration: none;
  vertical-align: middle;
  display: inline-block;
  margin: 0 51px 0 0; }

.additional__mail {
  color: #fff;
  font-size: 13px;
  text-decoration: none; }

.additional__close-replaced {
  color: #bbd3ea;
  font-size: 13px;
  text-decoration: none;
  display: inline-block;
  background-color: #0371b0;
  border-radius: 20px;
  vertical-align: middle;
  padding: 6px 12px;
  margin: 0 30px 0 10px; }

.icon-print {
  vertical-align: middle;
  margin: 0 5px 0 0; }

.icon-entrance {
  vertical-align: middle;
  margin: 0 0 0 5px; }

.content__item {
  display: none; }
  .content__item-active {
    display: block; }

.order {
  width: 1534px;
  float: left; }

.tab {
  border-bottom: 1px solid #eae9e8;
  border-right: 1px solid #eae9e8; }

.nav-tab {
  padding: 4px 0 0 45px;
  float: left; }
  .nav-tab__item {
    display: inline-block;
    padding: 0 12px; }
  .nav-tab__link {
    display: inline-block;
    font-size: 13px;
    color: #565656;
    text-decoration: none;
    padding: 15px 0 9px;
    border-bottom: 3px solid transparent;
    -webkit-transition: all 0.3s ease;
            transition: all 0.3s ease;
    vertical-align: middle; }
    .nav-tab__link-active {
      border-color: #5c5c5c; }
    .nav-tab__link:hover {
      border-color: #5c5c5c; }
  .nav-tab__numb {
    font-weight: bold;
    display: inline-block;
    vertical-align: middle;
    text-align: center;
    width: 22px;
    height: 22px;
    border-radius: 11px;
    padding: 3px 0 0; }
    .nav-tab__numb_col {
      color: #578f0f;
      border: 1px solid #578f0f; }

.nav-inf {
  float: right; }
  .nav-inf__item {
    display: inline-block;
    font-size: 13px;
    font-weight: 400;
    line-height: 27px;
    border-left: 1px solid #eae9e8;
    padding: 15px 21px 11px; }

.tab-content__item {
  padding: 15px 0 0 60px; }

.form {
  padding: 0 0 15px; }
  .form__serch {
    width: 456px;
    height: 35px;
    font-size: 13px;
    background-color: white;
    border: 1px solid #e4e4e4;
    border-radius: 3px;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.16);
    padding: 0 0 0 11px; }

.table-cast {
  height: 800px;
  overflow: auto; }

.table {
  border: 1px solid #e4e4e4; }
  .table_full {
    width: 100%; }
  .table__row {
    -webkit-transition: all 0.3s ease;
            transition: all 0.3s ease; }
    .table__row_shadow {
      box-shadow: 0 1px 3px rgba(113, 113, 113, 0.26); }
    .table__row-min {
      border-left: 2px solid #f65a5a; }
    .table__row_checked {
      background-color: #f4f4f4; }
    .table__row:hover {
      background-color: #f4f4f4; }
  .table__header {
    color: #303030;
    font-weight: 700;
    line-height: 25px;
    background-color: #f5f5f5;
    border-bottom: 1px solid #e4e4e4;
    border-right: 1px solid #e4e4e4;
    padding: 4px 0 7px; }
  .table__cell {
    text-align: center;
    border-bottom: 1px solid #e4e4e4;
    padding: 13px 10px 11px;
    vertical-align: middle; }
    .table__cell_tal {
      text-align: left; }

.status-btn {
  display: inline-block;
  width: 75px;
  height: 20px;
  background-color: #e5e5e5;
  border-radius: 3px;
  color: #707070;
  padding: 5px 0;
  text-align: center; }
  .status-btn_done {
    background-color: #8abc49;
    color: #fff; }
  .status-btn_kitchen {
    background-color: #fb7b25;
    color: #fff; }
  .status-btn_delivery {
    background-color: #39b0d7;
    color: #fff; }

.phone-client {
  display: block;
  color: #7f7f7f; }

.time_red {
  color: #f65a5a;
  font-weight: 700; }

.time_orange {
  color: #fb7b25;
  font-weight: 700; }

.numb-order {
  float: right;
  display: inline-block;
  padding: 4px 5px 0 0;
  vertical-align: middle; }

.pic-bold {
  font-weight: 900; }

.aside {
  width: 386px;
  float: right;
  background-color: #f4f4f4; }
  .aside-order {
    padding-top: 40px; }
  .aside-head {
    text-align: right;
    padding: 28px 17px 38px 23px; }
    .aside-head__numb-ord {
      font-size: 18px;
      display: inline-block;
      border-bottom: 4px solid #8abc49;
      float: left;
      padding: 5px 0; }
    .aside-head__btn {
      display: inline-block;
      color: #3f3f3f;
      width: 110px;
      line-height: 30px;
      background-color: #fff;
      border: 1px solid #d7d7d7;
      border-radius: 3px;
      text-align: center;
      text-decoration: none; }
      .aside-head__btn_poz {
        margin: 3px 0 0 20px; }
  .aside-footer {
    background-color: #e4e4e4;
    padding: 0 0 20px 23px; }
    .aside-footer__h {
      font-size: 18px;
      font-weight: bold;
      color: #000;
      padding: 13px 0; }
    .aside-footer__opl {
      font-size: 13px;
      color: #000; }
    .aside-footer__price {
      font-size: 30px;
      font-weight: bold;
      color: #000; }
      .aside-footer__price-rub {
        font-size: 15px; }

.aside-list_cont {
  max-height: 520px;
  overflow: auto; }

.aside-list__item {
  padding: 12px 0 15px; }
  .aside-list__item_header {
    font-weight: 700;
    background-color: #e4e4e4;
    padding: 10px 0 9px; }
  .aside-list__item_footer {
    background-color: #fff;
    margin: 24px 0 0; }
    .aside-list__item_footer-active {
      box-shadow: 0px -8px 6px -3px rgba(50, 50, 50, 0.1); }

.aside-list__name {
  display: inline-block;
  width: 78%;
  vertical-align: middle;
  font-size: 13px;
  padding-left: 22px; }
  .aside-list__name_bol {
    font-weight: bold; }

.aside-list__quantity {
  display: inline-block;
  width: 20%;
  text-align: center;
  vertical-align: middle;
  color: #565656;
  font-size: 13px;
  font-weight: 700; }

.name_green {
  color: #50b612; }

.name_oran {
  color: #ff7b33; }

.icon-user_min {
  vertical-align: middle; }

.footer {
  min-width: 1920px;
  background-color: #393939;
  color: #fff;
  line-height: 70px; }
  .footer__cont {
    width: 80%;
    float: left; }
  .footer__aside {
    width: 20%;
    float: right;
    font-size: 13px;
    text-align: center; }
  .footer-nav_bord {
    border-right: 1px solid #474747; }
  .footer-nav__item {
    display: inline-block;
    line-height: 70px;
    padding: 0 15px;
    font-size: 13px; }
    .footer-nav__item_bord {
      border-left: 1px solid #474747; }
    .footer-nav__item_link {
      background-color: #676767;
      color: #f5f5f5;
      text-decoration: none; }
  .footer-nav__zak {
    display: inline-block;
    border-bottom: 2px solid #8abc49;
    line-height: 20px; }

.termin-btn {
  display: inline-block;
  width: 47px;
  height: 18px;
  background-color: #759160;
  border-radius: 9px;
  position: relative;
  vertical-align: middle;
  margin: 0 10px; }
  .termin-btn_active {
    background-color: #ff6d74; }
  .termin-btn__clock {
    position: absolute;
    top: -6px;
    right: 0;
    display: inline-block;
    width: 29px;
    height: 29px;
    background-color: #fff;
    box-shadow: 0 3px 7px rgba(78, 59, 64, 0.7);
    border-radius: 15px;
    cursor: pointer; }
    .termin-btn__clock_active {
      right: auto;
      left: 0; }

/*# sourceMappingURL=data:application/json;base64, */
